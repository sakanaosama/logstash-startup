input { 
  stdin {  }

  http {
    host => "127.0.0.1"
    port => 8808 
  }

  beats {
    port => 5044
    host => "0.0.0.0"
  }

} 

filter {
  # if [event][dataset] != "apache.access" {
  #   drop { }
  # }


# 2023-11-28T12:37:34.422Z [Toyota Support Crawler#1] INFO  CrawlProgressLogger - 7(+3) processed | 1335(-3) queued | 0 processed/sec | 33 seconds elapsed

  grok {
    match => {
      "message" => [
    # "%{TIMESTAMP_ISO8601:[crawler_time]} \[%{DATA:[crawler_tag]}\] %{LOGLEVEL:[loglevel]}\W+CrawlProgressLogger - %{DATA:[crawler_processed]} processed \| %{DATA:[crawler_queued]} queued \| %{DATA:[crawler_processed_sec]} processed/sec \| %{DATA:[crawler_sec_elapsed]} seconds elapsed",



    "%{TIMESTAMP_ISO8601:[crawler][time]} \[%{DATA:[crawler][tag]}\] %{LOGLEVEL:[crawler][loglevel]} %{DATA:[crawler][event]} - %{GREEDYDATA:[crawler][next]}"


    # '%{IPORHOST:[source][address]} - %{DATA:[user][name]} \[%{HTTPDATE:[apache][access][time]}\] "(?:%{WORD:[http][request][method]} %{DATA:[_tmp][url_orig]} HTTP/%{NUMBER:[http][version]}|-)?" %{NUMBER:[http][response][status_code]:long} (?:%{NUMBER:[http][response][body][bytes]:long}|-)("%{DATA:[http][request][referrer]}")?( "%{DATA:[user_agent][original]}")?',

    # '%{IPORHOST:[source][address]} - %{DATA:[user][name]} \[%{HTTPDATE:[apache][access][time]}\] "-" %{NUMBER:[http][response][status_code]:long} -',

    # '\[%{HTTPDATE:[apache][access][time]}\] %{IPORHOST:[source][address]} %{DATA:[apache][access][ssl][protocol]}
    #   %{DATA:[apache][access][ssl][cipher]} "%{WORD:[http][request][method} %{DATA:[_tmp][url_orig]}
    #   HTTP/%{NUMBER:[http][version]}" (-|%{NUMBER:[http][response][body][bytes]:long})'


      ]
    }
  }

  # if "_grokparsefailure" in [tags] {
  #   drop {}
  # }

  grok {
    match => {
      "[source][address]" => "^(%{IP:[source][ip]}|%{HOSTNAME:[source][domain]})$"
    }
  }

  mutate {
    add_field => { "[event][create]" => "%{@timestamp}" }
  }

  mutate {
    convert => {"[http][response][status_code]" => "integer" }
  }


}

output {
  stdout {
    codec => rubydebug
  }

  file {
    path => "output.txt"
  }

  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "filebeat-8.11.1-%{+YYY.MM.dd}"
  }
}